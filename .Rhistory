library(testthat)
library(IPSR)
X <- miller05$X
y <- miller05$y
surv <- miller05$surv
?check_rhub
library(glmnet)
?glmnet
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
usethis::use_package("BiocParallel", type = "Imports")
usethis::use_package("survival", type = "Imports")
usethis::use_package("testthat", type = "Suggests")
usethis::use_tidy_description()
#- define the license type
use_gpl_license()
document()
install()
library(IPSR)
#- Local CMD check *
devtools::check()
setwd("C:/Users/wangs/OneDrive/codes/4- ranking stability/package")
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
usethis::use_package("BiocParallel", type = "Imports")
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
setwd("C:/Users/wangs/OneDrive/codes/4- ranking stability/package")
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
usethis::use_package("BiocParallel", type = "Imports")
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
setwd("C:/Users/wangs/OneDrive/codes/4- ranking stability/package")
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
usethis::use_package("BiocParallel", type = "Imports")
usethis::use_package("survival", type = "Imports")
usethis::use_package("testthat", type = "Suggests")
usethis::use_tidy_description()
#- define the license type
use_gpl_license()
document()
setwd("C:/Users/wangs/OneDrive/codes/4- ranking stability/package")
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
usethis::use_package("BiocParallel", type = "Imports")
usethis::use_package("survival", type = "Imports")
usethis::use_package("testthat", type = "Suggests")
usethis::use_tidy_description()
usethis::use_package("BiocParallel", type = "Imports")
usethis::use_package("survival", type = "Imports")
setwd("C:/Users/wangs/OneDrive/codes/4- ranking stability/package")
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
usethis::use_package("BiocParallel", type = "Imports")
usethis::use_package("survival", type = "Imports")
usethis::use_package("testthat", type = "Suggests")
usethis::use_package("knitr", type = "Imports")
usethis::use_tidy_description()
#- define the license type
use_gpl_license()
document()
install()
library(IPSR)
#- Local CMD check *
devtools::check()
library(roxygen2)
library(devtools)
setwd("C:/Users/wangs/OneDrive/codes/4- ranking stability/package")
library(roxygen2)
library(devtools)
library(testthat)
# create("IPSR")
setwd("./IPSR")
usethis::use_package("BiocParallel", type = "Imports")
usethis::use_package("BiocParallel", type = "Imports")
usethis::use_package("survival", type = "Imports")
usethis::use_package("testthat", type = "Suggests")
# usethis::use_package("knitr", type = "Imports")
usethis::use_package("rmarkdown", type = "Suggests")
usethis::use_tidy_description()
#- define the license type
use_gpl_license()
document()
install()
library(IPSR)
#- Local CMD check *
devtools::check()
#- CRAN specific requirements *
devtools::check_rhub()
